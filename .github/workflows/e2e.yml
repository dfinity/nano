name: e2e

on:
  push:
    branches:
      - master
  pull_request:

jobs:
  build:
    name: ${{ matrix.task }} build (${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        # windows not supported by dfx
        os: [ubuntu-latest, macos-latest]
        rust: [stable]
        binary_path: [ 'target/release' ]
    steps:
      - uses: actions/checkout@master

      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ matrix.rust }}
          override: true
          # components: rustfmt, clippy
  
      - name: Build release
        run: make release
      - name: Upload Artifacts
        uses: actions/upload-artifact@v2
        with:
          name: quill-${{ matrix.os }}-rs-${{ matrix.rust }}
          path: ${{ matrix.binary_path }}/quill

  list_tests:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - uses: actions/checkout@v1
      - id: set-matrix
        run: echo "::set-output name=matrix::$(scripts/workflows/e2e-matrix.py)"

  test:
    runs-on: ${{ matrix.os }}
    needs: [ build, list_tests ]
    strategy:
      fail-fast: false
      matrix: ${{fromJson(needs.list_tests.outputs.matrix)}}
    env:
      E2E_TEST: tests-${{ matrix.test }}.bash
    steps:
      - uses: actions/checkout@v1
      - name: Download quill binary
        uses: actions/download-artifact@v2
        with:
          name: quill-${{ matrix.os }}-rs-${{ matrix.rust }}
          path: /usr/local/bin
      - name: Setup quill binary
        run: chmod +x /usr/local/bin/quill
      - name: Provision Darwin
        if: contains(matrix.os, 'macos')
        run: bash scripts/workflows/provision-darwin.sh
      - name: Provision Linux
        if: contains(matrix.os, 'ubuntu')
        run: bash scripts/workflows/provision-linux.sh
      - name: Prepare environment
        run: |
          echo "archive=$(pwd)/e2e/archive" >> "$GITHUB_ENV"
          echo "assets=$(pwd)/e2e/assets" >> "$GITHUB_ENV"
          echo "utils=$(pwd)/e2e/utils" >> "$GITHUB_ENV"
          export
      - name: Run e2e test
        run: timeout 2100 bats "e2e/$E2E_TEST"

  aggregate:
    name: e2e:required
    if: ${{ always() }}
    needs: [test]
    runs-on: ubuntu-latest
    steps:
      - name: check e2e test result
        if: ${{ needs.test.result != 'success' }}
        run: exit 1
