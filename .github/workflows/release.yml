name: Release

on:
  push:
    tags:
      - '*'

jobs:
  build:
    name: Release binary for ${{ matrix.name }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-latest
            name: linux
            target_file: target/x86_64-unknown-linux-musl/release/quill
            asset_name: quill-linux-x86_64
            make_target: musl-static
          - os: windows-latest
            name: windows
            target_file: target/release/quill.exe
            asset_name: quill-windows-x86_64.exe
            make_target: release
            rust: stable
          - os: macos-latest
            name: macos
            target_file: target/release/quill
            asset_name: quill-macos-x86_64
            make_target: release
            rust: stable
          - os: ubuntu-latest
            name: arm
            target_file: target/arm-unknown-linux-gnueabihf/release/quill
            asset_name: quill-arm_32
            make_target: unused
            rust: stable
    steps:
    - uses: actions/checkout@master

    - name: Install dependencies (windows only)
      if: matrix.name == 'windows'
      shell: bash
      run: |
        vcpkg integrate install
        vcpkg install openssl:x64-windows-static-md
        echo "::set-env OPENSSL_DIR 'C:\Tools\vcpkg\installed\x64-windows-static-md'"
        echo "::set-env OPENSSL_STATIC Yes"
      env:
        VCPKG_ROOT: 'C:\vcpkg'

    - name: Install toolchain (Linux static)
      if: matrix.name == 'linux'
      uses: jean-dfinity/rust-musl-action@master
      with:
        args: make ${{ matrix.make_target }}
    - name: Install toolchain (ARM)
      if: matrix.name == 'arm'
      uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        toolchain: ${{ matrix.rust }}
        override: true
        target: arm-unknown-linux-gnueabihf
    - name: Install toolchain (Non-linux)
      if: matrix.name != 'linux' && matrix.name != 'arm'
      uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        toolchain: ${{ matrix.rust }}
        override: true

    - name: Cross build
      if: matrix.name == 'arm'
      uses: actions-rs/cargo@v1
      with:
        use-cross: true
        command: build
        args: --target arm-unknown-linux-gnueabihf --features static-ssl --release --locked

    - name: Make
      if: matrix.name != 'linux' && matrix.name != 'arm'
      run: make ${{ matrix.make_target }}

    - name: Upload binaries to release
      uses: svenstaro/upload-release-action@v2
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: ${{ matrix.target_file }}
        asset_name: ${{ matrix.asset_name }}
        tag: ${{ github.ref }}
