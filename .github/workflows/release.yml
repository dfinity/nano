name: Release

on:
  push:
    tags:
      - "*"
  pull_request:

env:
  rust: 1.75.0

jobs:
  build:
    name: Release binary for ${{ matrix.name }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-20.04
            name: linux-musl
            target: x86_64-unknown-linux-musl
            cross: true
            target_file: target/x86_64-unknown-linux-musl/release/quill
            asset_name: quill-linux-x86_64-musl
            features: []
          - os: windows-latest
            name: windows
            target_file: target/release/quill.exe
            asset_name: quill-windows-x86_64.exe
            build_deps: scripts/workflows/provision-windows-build.ps1
          - os: macos-latest
            name: macos
            target_file: target/release/quill
            asset_name: quill-macos-x86_64
            build_deps: scripts/workflows/provision-darwin-build.sh
          - os: ubuntu-latest
            name: linux-arm32
            target: arm-unknown-linux-gnueabihf
            cross: true
            target_file: target/arm-unknown-linux-gnueabihf/release/quill
            asset_name: quill-linux-arm32
            features: [hsm]
          - os: ubuntu-latest
            name: linux
            target_file: target/release/quill
            asset_name: quill-linux-x86_64
            build_deps: scripts/workflows/provision-linux-build.sh
    env:
      VCPKG_ROOT: 'C:\vcpkg'
    steps:
      - uses: actions/checkout@master

      - uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/git
            ~/.cargo/registry
            ${{ env.VCPKG_ROOT }}
          key: ${{ matrix.os }}-cargo-${{ env.rust }}-release-1

      - name: Install dependencies
        if: ${{ matrix.build_deps }}
        run: ${{ matrix.build_deps }}

      - name: Install toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ env.rust }}
          override: true
          target: ${{ matrix.target }}

      - name: Build
        uses: actions-rs/cargo@v1
        with:
          use-cross: ${{ matrix.cross }}
          command: build
          args: |
            ${{ matrix.target && format('--target {0}', matrix.target) }} 
            ${{ matrix.features && format('--no-default-features --features "{0}"', join(matrix.features)) }}
            --release --locked

      - name: Upload binaries to release
        if: ${{ github.ref_type == 'tag' }}
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: ${{ matrix.target_file }}
          asset_name: ${{ matrix.asset_name }}
          tag: ${{ github.ref }}
  
  aggregate:
    name: release:required
    needs: [build]
    if: ${{ always() }}
    runs-on: ubuntu-latest
    steps:
      - name: check result
        if: ${{ needs.build.result != 'success' }}
        run: exit 1
