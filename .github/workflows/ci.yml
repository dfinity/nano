name: CI

on: pull_request
    
env:
  rust: 1.66.1

jobs:
  ci:
    name: ${{ matrix.task.name }} (${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        task: 
        - name: Format
          command: cargo fmt -- --check
        - name: Clippy
          command: cargo clippy --all --all-targets --all-features --tests -- -D warnings
        - name: Test
          command: cargo build && ./tests/run.sh
    steps:
      - uses: actions/checkout@master

      - if: ${{ contains(matrix.os, 'windows') }}
        shell: bash
        run: echo 'VCPKG_ROOT=C:\vcpkg' >> $GITHUB_ENV
      - uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
            ${{ env.VCPKG_ROOT }}
          key: ${{ matrix.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}-${{ env.rust }}-ci-1

      - name: Install dependencies (windows only)
        if: ${{ contains(matrix.os, 'windows') }}
        shell: bash
        run: |
          vcpkg integrate install
          vcpkg install openssl:x64-windows-static-md
          echo "OPENSSL_DIR=C:\vcpkg\installed\x64-windows-static-md" >> $GITHUB_ENV
          echo "OPENSSL_STATIC=Yes" >> $GITHUB_ENV

      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ env.rust }}
          override: true
          components: rustfmt, clippy

      - name: ${{ matrix.task.name }}
        run: ${{ matrix.task.command }}
  
  aggregate:
    name: ci:required
    if: ${{ always() }}
    runs-on: ubuntu-latest
    needs: [ci]
    steps:
      - name: check result
        if: ${{ needs.ci.result != 'success' }}
        run: exit 1
